PODMAN_VERSION = v4.3.1
PODMAN_SITE = $(call github,containers,podman,$(PODMAN_VERSION))
PODMAN_LICENSE = Apache License 2.0
PODMAN_LICENSE_FILES = LICENSE

PODMAN_GOMOD = github.com/containers/podman/v4

PODMAN_TAGS = cgo

ifeq ($(BR2_PACKAGE_PODMAN_SELINUX),y)
	PODMAN_TAGS += selinux
endif

ifeq ($(BR2_PACKAGE_PODMAN_SYSTEMD),y)
	PODMAN_TAGS += systemd
endif

ifeq ($(BR2_PACKAGE_PODMAN_SECCOMP),y)
	PODMAN_TAGS += seccomp
endif

ifeq ($(BR2_PACKAGE_PODMAN_BTFRS),y)
	PODMAN_DEPENDENCIES += btrfs-progs
define PODMAN_BTFRS_DRIVER_CONFIG_FIXUPS
	$(call KCONFIG_ENABLE_OPT,CONFIG_BTRFS_FS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_BTRFS_FS_POSIX_ACL)
endef
else
	PODMAN_TAGS += exclude_graphdriver_btrfs
endif

ifeq ($(BR2_PACKAGE_PODMAN_DEVICEMAPPER),y)
	PODMAN_DEPENDENCIES += lvm2
define PODMAN_DEVICEMAPPER_DRIVER_CONFIG_FIXUPS
	$(call KCONFIG_ENABLE_OPT,CONFIG_MD)
	$(call KCONFIG_ENABLE_OPT,CONFIG_BLK_DEV_DM)
	$(call KCONFIG_ENABLE_OPT,CONFIG_MD_THIN_PROVISIONING)
endef
else
	PODMAN_TAGS += exclude_graphdriver_devicemapper
endif

# Overlay driver does not support ext2/3/4 filesystems
ifeq ($(BR2_TARGET_ROOTFS_EXT2),y)
	PODMAN_TAGS += exclude_graphdriver_overlay
define PODMAN_OVERLAY_DRIVER_CONFIG_FIXUPS
	$(call KCONFIG_ENABLE_OPT,CONFIG_OVERLAY_FS)
endef
endif

# buildroot does not have the pgpme project
PODMAN_TAGS += containers_image_openpgp 
PODMAN_BUILD_TARGETS = cmd/podman cmd/rootlessport
# PODMAN_INSTALL_BINS = podman rootlessport

define PODMAN_INSTALL_TARGET_CMDS
	$(INSTALL) -D -m 0755 $(CONFIG_DIR)/package/podman/policy.json $(TARGET_DIR)/etc/containers/policy.json
	$(INSTALL) -D -m 0755 $(@D)/cni/87-podman-bridge.conflist $(TARGET_DIR)/etc/cni/net.d/87-podman-bridge.conflist
	$(INSTALL) -D -m 0755 $(@D)/bin/podman $(TARGET_DIR)/usr/bin/podman
	$(INSTALL) -D -m 0755 $(@D)/bin/rootlessport $(TARGET_DIR)/usr/bin/rootlessport
endef

define PODMAN_LINUX_CONFIG_FIXUPS
	$(call KCONFIG_ENABLE_OPT,CONFIG_MEMCG)
	$(call KCONFIG_ENABLE_OPT,CONFIG_CGROUPS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_CGROUP_SCHED)
	$(call KCONFIG_ENABLE_OPT,CONFIG_CGROUP_FREEZER)
	$(call KCONFIG_ENABLE_OPT,CONFIG_CGROUP_DEVICE)
	$(call KCONFIG_ENABLE_OPT,CONFIG_CGROUP_CPUACCT)
	$(call KCONFIG_ENABLE_OPT,CONFIG_CGROUP_PIDS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_CPUSETS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NAMESPACES)
	$(call KCONFIG_ENABLE_OPT,CONFIG_UTS_NS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_IPC_NS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_PID_NS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NET_NS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_USER_NS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NETFILTER)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NETFILTER_ADVANCED)
	$(call KCONFIG_ENABLE_OPT,CONFIG_BRIDGE_NETFILTER)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NF_CONNTRACK)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NETFILTER_XTABLES)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NETFILTER_XT_MATCH_ADDRTYPE)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NETFILTER_XT_MATCH_CONNTRACK)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NETFILTER_XT_MATCH_IPVS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NETFILTER_XT_MATCH_COMMENT)
	$(call KCONFIG_ENABLE_OPT,CONFIG_IP_NF_IPTABLES)
	$(call KCONFIG_ENABLE_OPT,CONFIG_IP_NF_FILTER)
	$(call KCONFIG_ENABLE_OPT,CONFIG_IP_NF_NAT)
	$(call KCONFIG_ENABLE_OPT,CONFIG_IP_NF_TARGET_MASQUERADE)
	$(call KCONFIG_ENABLE_OPT,CONFIG_BRIDGE)
	$(call KCONFIG_ENABLE_OPT,CONFIG_NET_CORE)
	$(call KCONFIG_ENABLE_OPT,CONFIG_VETH)
	$(call KCONFIG_ENABLE_OPT,CONFIG_KEYS)
	$(call KCONFIG_ENABLE_OPT,CONFIG_POSIX_MQUEUE)
	$(PODMAN_BTFRS_DRIVER_CONFIG_FIXUPS)
	$(PODMAN_DEVICEMAPPER_DRIVER_CONFIG_FIXUPS)
	$(PODMAN_OVERLAY_DRIVER_CONFIG_FIXUPS)
endef

$(eval $(golang-package))
